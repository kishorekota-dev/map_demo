version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: poc-chat-postgres-dev
    restart: unless-stopped
    environment:
      POSTGRES_DB: poc_banking
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres-dev-data:/var/lib/postgresql/data
      - ./migrations:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d poc_banking"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - poc-backend-dev-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: poc-chat-redis-dev
    restart: unless-stopped
    command: redis-server --appendonly yes
    ports:
      - "6379:6379"
    volumes:
      - redis-dev-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - poc-backend-dev-network

  # Chat Backend Service (Development with hot reload)
  chat-backend:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: poc-chat-backend-dev
    restart: unless-stopped
    environment:
      PORT: 3006
      NODE_ENV: development
      LOG_LEVEL: debug
      HOST: 0.0.0.0
      JWT_SECRET: dev-jwt-secret-change-me-in-production-2024
      JWT_EXPIRY: 24h
      ALLOWED_ORIGINS: http://localhost:3000,http://localhost:3001,http://localhost:8080,http://localhost:8081
      
      # Database
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: poc_banking
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_POOL_MAX: 10
      DB_POOL_MIN: 2
      DB_LOGGING: true
      DB_SSL: false
      
      # Redis
      REDIS_URL: redis://redis:6379
      REDIS_SESSION_TTL: 3600
      
      # Microservices (can be updated based on your setup)
      API_GATEWAY_URL: http://host.docker.internal:3001
      BANKING_SERVICE_URL: http://host.docker.internal:3005
      NLP_SERVICE_URL: http://host.docker.internal:3002
      NLU_SERVICE_URL: http://host.docker.internal:3003
      MCP_SERVICE_URL: http://host.docker.internal:3004
      
      # Development settings
      WS_MAX_CONNECTIONS: 100
      MAX_CONCURRENT_AGENTS: 10
      SESSION_STORAGE_TYPE: redis
    
    ports:
      - "3006:3006"
    
    volumes:
      # Mount source code for hot reload
      - ./:/app
      - /app/node_modules
      - ./logs:/app/logs
      - ./uploads:/app/uploads
    
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    
    command: npm run dev
    
    networks:
      - poc-backend-dev-network
    
    extra_hosts:
      - "host.docker.internal:host-gateway"

networks:
  poc-backend-dev-network:
    driver: bridge
    name: poc-backend-dev-network

volumes:
  postgres-dev-data:
    name: poc-chat-postgres-dev-data
  redis-dev-data:
    name: poc-chat-redis-dev-data
